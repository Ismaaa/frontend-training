.story {
    width: 75%;
    margin: 0 auto;
    box-shadow: 0 3rem 6rem rgba($color-black, 0.6);
    background-color: $color-white;
    border-radius: $border-radius-small;
    padding: 6rem;
    padding-left: 9rem;
    font-size: $default-font-size;
    transform: skewX(-12deg);

    // Th is would not work, as some child elements already have
    // the transform property set, and they can't have more than 1
    // & > * {
    //   transform: skewX(12deg);
    // }

    @include respond(tablet-portrait) {
        width: 100%;
        padding: 4rem;
        padding-left: 7rem;
    }

    @include respond(phone) {
        transform: skewX(0);
    }

    &__shape {
        float: left;
        // It's always a good practice to move floated elements with transform instead of padding / margin
        transform: translateX(-3rem) skewX(12deg);
        position: relative;
        overflow: hidden;
        border-radius: 50%;

        @supports (clip-path: circle(50% at 50% 50%)) or
            (-webkit-clip-path: circle(50% at 50% 50%)) {
            width: 15rem;
            height: 15rem;
            border-radius: none;

            -webkit-clip-path: circle(50% at 50% 50%);
            clip-path: circle(50% at 50% 50%);

            -webkit-shape-outside: circle(50% at 50% 50%);
            shape-outside: circle(50% at 50% 50%);
        }

        @include respond(phone) {
            transform: translateX(-3rem) skewX(0);
        }
    }

    &__image {
        height: 100%;
        transform: translateX(-4rem) scale(1.4);
        transition: all 0.5s;
        backface-visibility: hidden; // Fix small movement when the transition ends
    }

    &__text {
        transform: skewX(12deg);

        @include respond(phone) {
            transform: skewX(0);
        }
    }

    &__caption {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, 20%); // Initial state
        color: $color-white;
        text-transform: uppercase;
        font-size: 1.7rem;
        text-align: center;
        opacity: 0; // Initial state
        transition: all 0.5s;
        backface-visibility: hidden; // Fix small movement when the transition ends
    }

    // So, when the story is hovered, we want to change the caption
    &:hover &__caption {
        opacity: 1;
        transform: translate(-50%, -50%); // Initial state
    }

    // When the story block is hovered, we want to change the image
    &:hover &__image {
        transform: translateX(-4rem) scale(1);
        filter: blur(3px);
    }
}
